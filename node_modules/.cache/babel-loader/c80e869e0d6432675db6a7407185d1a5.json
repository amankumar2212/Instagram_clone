{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wings\\\\myfirstreact\\\\src\\\\Post.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Post.css';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { db } from './firebase';\nimport firebase from 'firebase';\n\nfunction Post({\n  postId,\n  user,\n  username,\n  caption,\n  imageurl\n}) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState('');\n  useEffect(() => {\n    let unsubscribe;\n\n    if (postId) {\n      unsubscribe = db.collection(\"posts\").doc(postId).collection(\"comments\").orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n        setComments(snapshot.docs.map(doc => doc.data()));\n      });\n    }\n\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = event => {\n    event.preventDefault();\n    db.collection(\"post\").dec(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setComment('');\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post_avatar\",\n    alt: \"AmanKumar\",\n    source: \"/static/images/avatar/1.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 14\n    }\n  }, username)), /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post_image\",\n    alt: \"\",\n    src: imageurl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"post_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 40\n    }\n  }, username), caption), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 14\n    }\n  }, comments.map(comment => /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 26\n    }\n  }, comment.username), comment.text))), user && /*#__PURE__*/React.createElement(\"form\", {\n    className: \"post_commentBox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"post_input\",\n    type: \"text\",\n    placeholder: \"Add your Comment....\",\n    value: comment,\n    onChange: e => setComments(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"post_button\",\n    disabled: !comment,\n    type: \"submit\",\n    onClick: postComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }\n  }, \"Post\")));\n}\n\nexport default Post;","map":{"version":3,"sources":["C:/Users/wings/myfirstreact/src/Post.js"],"names":["React","useEffect","useState","Avatar","db","firebase","Post","postId","user","username","caption","imageurl","comments","setComments","comment","setComment","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","postComment","event","preventDefault","dec","add","text","displayName","timestamp","firestore","FieldValue","serverTimestamp","e","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,EAAT,QAAmB,YAAnB;AACA,OAAQC,QAAR,MAAsB,UAAtB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,MAAD;AAAQC,EAAAA,IAAR;AAAaC,EAAAA,QAAb;AAAsBC,EAAAA,OAAtB;AAA8BC,EAAAA;AAA9B,CAAd,EAAuD;AAEnD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACY,OAAD,EAAWC,UAAX,IAAwBb,QAAQ,CAAC,EAAD,CAAtC;AACAD,EAAAA,SAAS,CAAE,MAAM;AACb,QAAIe,WAAJ;;AACA,QAAGT,MAAH,EAAW;AACPS,MAAAA,WAAW,GAACZ,EAAE,CACba,UADW,CACA,OADA,EAEXC,GAFW,CAEPX,MAFO,EAGXU,UAHW,CAGA,UAHA,EAIXE,OAJW,CAIH,WAJG,EAIS,MAJT,EAKXC,UALW,CAKCC,QAAD,IAAc;AACtBR,QAAAA,WAAW,CAACQ,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBL,GAAD,IAASA,GAAG,CAACM,IAAJ,EAA3B,CAAD,CAAX;AACH,OAPW,CAAZ;AAQH;;AAGR,WAAM,MAAK;AACPR,MAAAA,WAAW;AACf,KAFA;AAGO,GAjBK,EAiBH,CAACT,MAAD,CAjBG,CAAT;;AAmBG,QAAMkB,WAAW,GAAGC,KAAD,IAAW;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACAvB,IAAAA,EAAE,CAACa,UAAH,CAAc,MAAd,EAAsBW,GAAtB,CAA0BrB,MAA1B,EAAkCU,UAAlC,CAA6C,UAA7C,EAAyDY,GAAzD,CAA6D;AAC7DC,MAAAA,IAAI,EAAGhB,OADsD;AAE7DL,MAAAA,QAAQ,EAAGD,IAAI,CAACuB,WAF6C;AAG7DC,MAAAA,SAAS,EAAG3B,QAAQ,CAAC4B,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAHiD,KAA7D;AAMJpB,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GATF;;AAWH,sBACA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEM;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEG,oBAAC,MAAD;AACA,IAAA,SAAS,EAAC,aADV;AAEA,IAAA,GAAG,EAAC,WAFJ;AAGA,IAAA,MAAM,EAAC,6BAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,eAOG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKN,QAAL,CAPH,CAFN,eAeQ;AAAK,IAAA,SAAS,EAAC,YAAf;AAA4B,IAAA,GAAG,EAAC,EAAhC;AAAmC,IAAA,GAAG,EAAEE,QAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfR,eAiBS;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASF,QAAT,CAA1B,EAAsDC,OAAtD,CAjBT,eAoBS;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKE,QAAQ,CAACW,GAAT,CAAcT,OAAD,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,OAAO,CAACL,QAAjB,CADJ,EACwCK,OAAO,CAACgB,IADhD,CADH,CADL,CApBT,EA4BUtB,IAAI,iBACL;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACA,IAAA,SAAS,EAAC,YADV;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,WAAW,EAAC,sBAHZ;AAIA,IAAA,KAAK,EAAEM,OAJP;AAKA,IAAA,QAAQ,EAAGsB,CAAD,IAAOvB,WAAW,CAACuB,CAAC,CAACC,MAAF,CAASC,KAAV,CAL5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAQE;AACC,IAAA,SAAS,EAAC,aADX;AAEC,IAAA,QAAQ,EAAE,CAACxB,OAFZ;AAGC,IAAA,IAAI,EAAC,QAHN;AAIC,IAAA,OAAO,EAAEW,WAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,CA7BT,CADA;AAmDU;;AAEd,eAAenB,IAAf","sourcesContent":["import React, { useEffect , useState } from 'react'\r\nimport './Post.css';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { db } from './firebase';\r\nimport  firebase from 'firebase';\r\n\r\nfunction Post({postId,user,username,caption,imageurl}) {\r\n \r\n    const [comments, setComments] = useState([]);   \r\n    const [comment , setComment]= useState('');\r\n    useEffect (() => {\r\n        let unsubscribe;\r\n        if(postId) {\r\n            unsubscribe=db\r\n            .collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"comments\")\r\n            .orderBy('timestamp','desc')\r\n            .onSnapshot((snapshot) => {\r\n                setComments(snapshot.docs.map((doc) => doc.data() ))\r\n            })\r\n        }\r\n    \r\n    \r\n return( )=>{\r\n     unsubscribe();\r\n};\r\n       }, [postId]);\r\n\r\n       const postComment= (event) => {\r\n                event.preventDefault();\r\n                db.collection(\"post\").dec(postId).collection(\"comments\").add({\r\n                text : comment,\r\n                username : user.displayName,\r\n                timestamp : firebase.firestore.FieldValue.serverTimestamp()\r\n            });\r\n            \r\n            setComment('');\r\n        }\r\n\r\n    return (\r\n    <div className=\"post\">\r\n          \r\n          <div className=\"post_header\">\r\n            \r\n             <Avatar\r\n             className=\"post_avatar\"\r\n             alt=\"AmanKumar\"\r\n             source=\"/static/images/avatar/1.png\"\r\n             />\r\n             <h3>{username}</h3>\r\n        \r\n        </div>\r\n             {/* header -> avatar + username*/}\r\n\r\n        \r\n            <img className=\"post_image\" alt=\"\" src={imageurl}></img>\r\n                {/* image */}\r\n             <h4 className=\"post_text\"><strong>{username}</strong>{caption}</h4>\r\n             {/* username + caption */}\r\n\r\n             <div className=\"post_comments\">\r\n                 {comments.map((comment) => (\r\n                     <p>\r\n                         <strong>{comment.username}</strong>{comment.text}                   \r\n                           </p>\r\n                 ))}\r\n\r\n             </div>\r\n             {user && (\r\n             <form className=\"post_commentBox\">\r\n               <input \r\n               className=\"post_input\"\r\n               type=\"text\"\r\n               placeholder=\"Add your Comment....\"\r\n               value={comment}\r\n               onChange={(e) => setComments(e.target.value)}\r\n               />\r\n               <button\r\n                className=\"post_button\"\r\n                disabled={!comment}\r\n                type=\"submit\"\r\n                onClick={postComment}\r\n               >\r\n                  Post\r\n               </button>\r\n                </form>\r\n             )}\r\n  </div>\r\n \r\n    )\r\n             }    \r\n\r\nexport default Post"]},"metadata":{},"sourceType":"module"}